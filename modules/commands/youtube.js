module.exports.config = {
    name: "media",
    version: "1.0.0",
    hasPermssion: 0,
    credits: "Minh Thuannn",
    description: "Ph√°t video th√¥ng qua link YouTube ho·∫∑c t·ª´ kho√° t√¨m ki·∫øm",
    commandCategory: "Ng∆∞·ªùi d√πng",
    usages: "[searchVideos]",
    cooldowns: 10,
    dependencies: {
const axios = require('axios');  // Th∆∞ vi·ªán axios ƒë·ªÉ g·ª≠i HTTP request

module.exports.run = async function ({ api: e, event: a, args: t }) {
    if (t.length === 0 || !t) return e.sendMessage("¬ª Ph·∫ßn t√¨m ki·∫øm kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng!", a.threadID, a.messageID);

    const query = t.join(" ");
    const apiKey = "AIzaSyB6kOvDm7RgXWtPX02-UkA8hSRSrVpNMKw";  // API key c·ªßa b·∫°n

    try {
        // G·ª≠i y√™u c·∫ßu t√¨m ki·∫øm video YouTube
        const searchResponse = await axios.get(`https://www.googleapis.com/youtube/v3/search`, {
            params: {
                part: "snippet",
                q: query,
                type: "video",
                maxResults: 6,
                key: apiKey
            }
        });

        const searchResults = searchResponse.data.items;
        if (searchResults.length === 0) {
            return e.sendMessage("Kh√¥ng t√¨m th·∫•y video n√†o v·ªõi t·ª´ kh√≥a b·∫°n nh·∫≠p.", a.threadID, a.messageID);
        }

        let videoList = "";
        const videoLinks = [];

        // L·∫∑p qua c√°c video t√¨m th·∫•y v√† t·∫°o danh s√°ch
        for (let i = 0; i < searchResults.length; i++) {
            const video = searchResults[i];
            const videoId = video.id.videoId;
            const videoTitle = video.snippet.title;
            const videoDescription = video.snippet.description;

            // L∆∞u c√°c video ID v√†o danh s√°ch
            videoLinks.push(videoId);

            // T·∫°o chu·ªói danh s√°ch video tr·∫£ v·ªÅ cho ng∆∞·ªùi d√πng
            videoList += `${i + 1}. ${videoTitle}\n   ${videoDescription}\n\n`;
        }

        // G·ª≠i th√¥ng tin video t√¨m ƒë∆∞·ª£c ƒë·∫øn ng∆∞·ªùi d√πng
        const message = `¬ªüîé C√≥ ${videoLinks.length} video tr√πng v·ªõi t·ª´ kh√≥a c·ªßa b·∫°n:\n\n${videoList}¬ª H√£y reply (ph·∫£n h·ªìi theo s·ªë th·ª© t·ª±) ƒë·ªÉ ch·ªçn video.`;
        e.sendMessage({ body: message }, a.threadID, (response) => {
            global.client.handleReply.push({
                name: this.config.name,
                messageID: response.messageID,
                author: a.senderID,
                link: videoLinks
            });
        }, a.messageID);

    } catch (error) {
        console.error("Error during YouTube API search:", error);
        return e.sendMessage("Kh√¥ng th·ªÉ x·ª≠ l√Ω request do l·ªói t·ª´ API.", a.threadID, a.messageID);
    }
};
